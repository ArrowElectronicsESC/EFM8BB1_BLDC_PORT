C51 COMPILER V9.53.0.0   EFM8BB1_BLDC_PORT                                                 01/16/2020 15:08:56 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE EFM8BB1_BLDC_PORT
OBJECT MODULE PLACED IN .\src\EFM8BB1_BLDC_PORT.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\A92862\
                    -SimplicityStudio\v4_workspace\EFM8BB1_BLDC_PORT\src\EFM8BB1_BLDC_PORT.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNING
                    -LEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\A92862\SimplicityStudio\v4_workspa
                    -ce\EFM8BB1_BLDC_PORT\inc;C:\Users\A92862\SimplicityStudio\v4_workspace\EFM8BB1_BLDC_PORT\inc\config;C:/SiliconLabs/Simpl
                    -icityStudio/v4/developer/sdks/8051/v4.1.7//kits/common/drivers/efm8_retargetserial;C:/SiliconLabs/SimplicityStudio/v4/de
                    -veloper/sdks/8051/v4.1.7//Lib/efm8_assert;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//kits/common/bsp
                    -;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//kits/EFM8BB1_LCK/config;C:/SiliconLabs/SimplicityStudio/
                    -v4/developer/sdks/8051/v4.1.7//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//D
                    -evice/EFM8BB1/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8BB1/peripheral_driver/inc) P
                    -RINT(.\src\EFM8BB1_BLDC_PORT.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\EFM8BB1_BLDC_PORT.OBJ)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // PCA0_8Bit_PWM_Output.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright 2014 Silicon Laboratories, Inc.
   5          // http://developer.silabs.com/legal/version/v11/Silicon_Labs_Software_License_Agreement.txt
   6          //
   7          
   8          //-----------------------------------------------------------------------------
   9          // Includes
  10          //-----------------------------------------------------------------------------
  11          
  12          #include "bsp.h"
  13          #include "InitDevice.h"
  14          #include "pca_0.h"
  15          
  16          //-----------------------------------------------------------------------------
  17          // SiLabs_Startup() Routine
  18          // ----------------------------------------------------------------------------
  19          // This function is called immediately after reset, before the initialization
  20          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  21          // useful place to disable the watchdog timer, which is enable by default
  22          // and may trigger before main() in some instances.
  23          //-----------------------------------------------------------------------------
  24          void SiLabs_Startup (void)
  25          {
  26   1        // Disable the watchdog here
  27   1      }
  28           
  29          //-----------------------------------------------------------------------------
  30          // main() Routine
  31          //-----------------------------------------------------------------------------
  32          
  33          void main(void)
  34          {
  35   1        uint16_t delay_count;                       // Used to implement a delay
  36   1        bool duty_direction = 0;                     // 0 = Decrease; 1 = Increase
  37   1        uint8_t duty_cycle = 0x80;
  38   1      
  39   1        enter_DefaultMode_from_RESET();
  40   1      
  41   1        while (1)
  42   1        {
  43   2          // Wait a little while
  44   2          for (delay_count = 15000; delay_count > 0; delay_count--);
  45   2      
  46   2          if (duty_direction == 1)                  // Direction = Increase
  47   2          {
C51 COMPILER V9.53.0.0   EFM8BB1_BLDC_PORT                                                 01/16/2020 15:08:56 PAGE 2   

  48   3            // First, check the ECOM0 bit
  49   3            if ((PCA0CPM0 & PCA0CPM0_ECOM__BMASK) == PCA0CPM0_ECOM__DISABLED)
  50   3            {
  51   4              PCA0CPM0 |= PCA0CPM0_ECOM__ENABLED;   // Set ECOM0 if it is '0'
  52   4            }
  53   3            else                                    // Increase duty cycle otherwise
  54   3            {
  55   4              duty_cycle--;                         // Increase duty cycle
  56   4      
  57   4              PCA0_writeChannel(PCA0_CHAN0, duty_cycle << 8);
  58   4      
  59   4      
  60   4              if (PCA0CPH0 == 0x00)
  61   4              {
  62   5                duty_direction = 0;                 // Change direction for next time
  63   5              }
  64   4            }
  65   3          }
  66   2          else                                      // Direction = Decrease
  67   2          {
  68   3            if (duty_cycle == 0xFF)
  69   3            {
  70   4              PCA0CPM0 &= ~PCA0CPM0_ECOM__BMASK;    // Clear ECOM0
  71   4              duty_direction = 1;                   // Change direction for next time
  72   4            }
  73   3            else
  74   3            {
  75   4              duty_cycle++;                         // Decrease duty cycle
  76   4      
  77   4              PCA0_writeChannel(PCA0_CHAN0, duty_cycle << 8);
  78   4            }
  79   3          }
  80   2      
  81   2        }
  82   1      }
  83          
  84          //-----------------------------------------------------------------------------
  85          // End Of File
  86          //-----------------------------------------------------------------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     81    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
